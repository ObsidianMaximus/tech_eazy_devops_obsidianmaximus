name: Terraform Apply

on:
  push:
    paths:
      - 'terraform/**'
  workflow_dispatch:
    inputs:
      stage:
        description: 'The environment to apply (dev or prod)'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod
      stage:
        description: 'Name of the s3 bucket to create.'
        required: true

jobs:
  terraform:
    name: Terraform Init & Apply
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-south-1
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Zip Lambda function
        run: |
          cd terraform
          zip -r lambda.zip lambda_function.py
        shell: bash

      - name: Terraform Apply (auto-approve)
        # Use the -var-file flag to load the correct environment config file
        run: terraform apply -var-file="${{ github.event.inputs.stage }}_config.tfvars" -auto-approve
        working-directory: terraform